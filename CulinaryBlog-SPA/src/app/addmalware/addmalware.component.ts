import { Component, OnInit } from '@angular/core';
import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';
import { FileUploader } from 'ng2-file-upload';
import { MalwareService } from '../_services/malware.service';
import{map} from 'rxjs/operators';
import { HttpClient, HttpEventType } from '@angular/common/http';
import { toFormData } from './toFormData';
import { GlobalVariable } from '../globals';
import { AlertifyService } from '../_services/alertify.service';
import { AuthService } from '../_services/auth.service';
import { createWiresService } from 'selenium-webdriver/firefox';
@Component({
  selector: 'app-addmalware',
  templateUrl: './addmalware.component.html',
  styleUrls: ['./addmalware.component.css']
})

export class AddmalwareComponent implements OnInit {
  modelForm : FormGroup;
  textValue = 'initial value';
  fileData: File = null;
  uploader: FileUploader = new FileUploader({ url: "api/your_upload", removeAfterUpload: false });
 
  progress: any;

  files: Array<any>;

  constructor(private formBuilder: FormBuilder, private malwareService: MalwareService, private http: HttpClient,
              private authService: AuthService, private alertifyService: AlertifyService) { }

  ngOnInit(): void {
    this.modelForm = this.formBuilder.group({
      name: ['', Validators.required],
      blob: ['', Validators.required]
    });

    
  }
  onSubmit() {
    
    
    
    for(let file of this.files)
    {
      //const formData = new FormData();
      //formData.append('name', this.modelForm.get('name').value);
      //formData.append('blob', this.modelForm.get('blob').value);


      console.log("File"+ JSON.stringify(file));
      this.http.post<any>('http://' + GlobalVariable.ip+':5000/api/malware/add', toFormData( file)).subscribe(
        (res) => console.log(res),
        (err) => console.log(err)
      );
      
    }
    
    this.alertifyService.success(" "+this.files.length+" files upload");


    

    //console.log(formData.get('blob').toString());
    
   
  }

 

  /*submit() {
   // console.log(this.modelForm.value);
    this.http.post('http://'+GlobalVariable.ip+':5000/api/malware/add', toFormData(this.modelForm.value), {
      observe: 'events'
    
    }).subscribe(event => {
    
      if ( event.type === HttpEventType.UploadProgress ) {
        this.progress = Math.round((100 * event.loaded) / event.total);
      }

      if ( event.type === HttpEventType.Response ) {
        console.log(event.body);
        this.modelForm.reset();
      }
    });
  }*/
 
  onFileSelect(event) {
    this.files= new Array();
   /* if (event.target.files.length > 0) {
      const file = event.target.files[0];
      this.modelForm.get('blob').setValue(file);
    }*/

    for(let file of event.target.files )
    {
      const newFile = {
        name: file.name,
        blob:  file,
        author: this.authService.decodedToken.unique_name
      }
      console.log(newFile);
      this.files.push(newFile);
    }
  }

  upload()
{
  

  let reader= new FileReader();
  reader.readAsDataURL(this.uploader.queue[0]._file);

}
fileProgress(fileInput: any) {
  this.fileData = <File>fileInput.target.files[0];
}


}

